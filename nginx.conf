
#=====================
# NODEJS Backend App
#=====================

server {

server_name api.example.com;
  location / {

    #==================
    
    # THIS SECTION ALLOWS CORS NPM TO HANDLE SET HEADERS IN YOUR NODE APP 
    # Dependencies - 
         # sudo apt-get install nginx-common
         # sudo apt-get install nginx-extras
    
    
    #===================

 more_set_headers 'Access-Control-Allow-Origin: $http_origin';
more_set_headers 'Access-Control-Allow-Credentials: true';
more_set_headers 'Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS';
more_set_headers 'Access-Control-Allow-Headers: Accept,Authorization,Cache-Control,Content-Type,DNT,If-Modified-Since,Keep-Alive,Origin,User-Agent,X-Requested-With';




        proxy_pass http://xxx.xx.xxx.xxx:2378;
#        index  index.html index.htm;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # try_files $uri $uri/ /index.html;
  }
  }


}


#=====================
# REACTJS  App SETUP
#====================


server {

server_name example.com www.example.com;
  location / {

        proxy_pass http://xxx.xx.xxx.xxx:3051;
        index  index.html index.htm;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;


  }

}

#====================
# Files CDN 
#===================

server {

server_name cdn.example.com;
  location / {

        proxy_pass http://xxx.xx.xxx.xxx:3200;
        index  index.html index.htm;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # try_files $uri $uri/ /index.html;
  }


}


#===========================
# SETUP PHPMYADMIN FOR MYSQL DB
#===========================

server {
        root /var/www/db/phpmyadmin;

        # Add index.php to the list if you are using PHP
        index index.html index.htm index.php;

        server_name db.example.com;

     location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
                try_files $uri $uri/ =404;
        }



location ~ \.php$ {

try_files $uri $uri/ =404;

include fastcgi_params;
  fastcgi_pass  unix:/run/php/php7.4-fpm.sock;
  fastcgi_index index.php;
  fastcgi_param DOCUMENT_ROOT  $realpath_root;
  fastcgi_param SCRIPT_FILENAME   $realpath_root$fastcgi_script_name;

}


        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
location ~ /\.ht {
       deny all;
}

